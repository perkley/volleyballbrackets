AWSTemplateFormatVersion: '2010-09-09'
Description: 'Volleyball Tournament App Infrastructure'

Parameters:
  AppName:
    Type: String
    Default: VolleyballTournamentApp
    Description: Name of the application

Resources:
  # Cognito User Pool
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub ${AppName}-UserPool
      AutoVerifiedAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true

  # Cognito User Pool Client
  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: !Sub ${AppName}-UserPoolClient
      UserPoolId: !Ref UserPool
      GenerateSecret: false
      ExplicitAuthFlows:
        - ADMIN_NO_SRP_AUTH

  # Cognito Identity Pool
  IdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      IdentityPoolName: !Sub ${AppName}IdentityPool
      AllowUnauthenticatedIdentities: true
      CognitoIdentityProviders:
        - ClientId: !Ref UserPoolClient
          ProviderName: !GetAtt UserPool.ProviderName

  # DynamoDB Tables
  VenueTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AppName}-Venues
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  EventTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AppName}-Events
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  BracketTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AppName}-Brackets
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  # AppSync API
  AppSyncAPI:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      Name: !Sub ${AppName}-API
      AuthenticationType: AMAZON_COGNITO_USER_POOLS
      UserPoolConfig:
        UserPoolId: !Ref UserPool
        AwsRegion: !Ref AWS::Region
        DefaultAction: ALLOW

  # Lambda Function
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${AppName}-Function
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          exports.handler = async (event) => {
            // Add your Lambda function code here
            return {
              statusCode: 200,
              body: JSON.stringify('Hello from Lambda!'),
            };
          };
      Runtime: nodejs20.x

  # IAM Role for Lambda
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  # Amplify App
  AmplifyApp:
    Type: AWS::Amplify::App
    Properties:
      Name: !Sub ${AppName}-AmplifyApp
      Repository: https://github.com/perkley/volleyballbrackets
      Description: Amplify Console app for Volleyball Tournament
      #OauthToken: <YOUR_GITHUB_OAUTH_TOKEN>
      BuildSpec: |
        version: 1
        frontend:
          phases:
            preBuild:
              commands:
                - cd amplify/southernlava-frontend
                - npm ci
            build:
              commands:
                - npm run build
          artifacts:
            baseDirectory: amplify/southernlava-frontend/build
            files:
              - '**/*'
          cache:
            paths:
              - amplify/southernlava-frontend/node_modules/**/*

Outputs:
  UserPoolId:
    Description: ID of the Cognito User Pool
    Value: !Ref UserPool
  IdentityPoolId:
    Description: ID of the Cognito Identity Pool
    Value: !Ref IdentityPool
  AppSyncAPIUrl:
    Description: URL of the AppSync API
    Value: !GetAtt AppSyncAPI.GraphQLUrl